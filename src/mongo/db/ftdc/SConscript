# -*- mode: python -*-
Import("env")

ftdcEnv = env.Clone()
ftdcEnv.InjectThirdPartyIncludePaths(libraries=['zlib'])

ftdcEnv.Library(
    target='ftdc',
    source=[
        'block_compressor.cpp',
        'collector.cpp',
        'compressor.cpp',
        'controller.cpp',
        'decompressor.cpp',
        'file_manager.cpp',
        'file_reader.cpp',
        'file_writer.cpp',
        'util.cpp',
        'varint.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/base',
        '$BUILD_DIR/mongol/bson/util/bson_extract',
        '$BUILD_DIR/mongol/db/service_context',
        '$BUILD_DIR/third_party/s2/s2', # For VarInt
        '$BUILD_DIR/third_party/shim_zlib',
    ],
    LIBDEPS_TAGS=[
        # Needs 'mongol::Validator<mongol::BSONObj>::validateLoad(char const*, unsigned long)'
        'incomplete',
    ],
)

env.Library(
    target='ftdc_mongold',
    source=[
        'ftdc_mongold.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/base',
        '$BUILD_DIR/mongol/db/server_parameters',
        'ftdc'
    ],
    LIBDEPS_TAGS=[
        # Needs 'mongol::storageGlobalParams' in storage_options.cpp which is in serveronly
        # And this library is already part of serveronly
        'incomplete',
    ],
)

env.CppUnitTest(
    target='ftdc_test',
    source=[
        'compressor_test.cpp',
        'controller_test.cpp',
        'file_manager_test.cpp',
        'file_writer_test.cpp',
        'ftdc_test.cpp',
        'util_test.cpp',
        'varint_test.cpp',
    ],
    LIBDEPS=[
        'ftdc',
    ],
)

