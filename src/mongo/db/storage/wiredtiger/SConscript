Import("env")
Import("wiredtiger")

if wiredtiger:
    wtEnv = env.Clone()
    wtEnv.InjectThirdPartyIncludePaths(libraries=['wiredtiger'])
    wtEnv.InjectThirdPartyIncludePaths(libraries=['zlib'])

    # This is the smallest possible set of files that wraps WT
    wtEnv.Library(
        target='storage_wiredtiger_core',
        source= [
            'wiredtiger_customization_hooks.cpp',
            'wiredtiger_global_options.cpp',
            'wiredtiger_index.cpp',
            'wiredtiger_kv_engine.cpp',
            'wiredtiger_record_store.cpp',
            'wiredtiger_recovery_unit.cpp',
            'wiredtiger_session_cache.cpp',
            'wiredtiger_snapshot_manager.cpp',
            'wiredtiger_size_storer.cpp',
            'wiredtiger_util.cpp',
            ],
        LIBDEPS= [
            '$BUILD_DIR/mongol/base',
            '$BUILD_DIR/mongol/db/namespace_string',
            '$BUILD_DIR/mongol/db/catalog/collection_options',
            '$BUILD_DIR/mongol/db/concurrency/write_conflict_exception',
            '$BUILD_DIR/mongol/db/index/index_descriptor',
            '$BUILD_DIR/mongol/db/service_context',
            '$BUILD_DIR/mongol/db/storage/index_entry_comparison',
            '$BUILD_DIR/mongol/db/storage/key_string',
            '$BUILD_DIR/mongol/db/storage/oplog_hack',
            '$BUILD_DIR/mongol/db/storage/storage_options',
            '$BUILD_DIR/mongol/util/elapsed_tracker',
            '$BUILD_DIR/mongol/util/foundation',
            '$BUILD_DIR/mongol/util/processinfo',
            '$BUILD_DIR/mongol/util/concurrency/ticketholder',
            '$BUILD_DIR/third_party/shim_wiredtiger',
            '$BUILD_DIR/third_party/shim_snappy',
            '$BUILD_DIR/third_party/shim_zlib',
            ],
        LIBDEPS_TAGS=[
            # References WiredTigerKVEngine::initRsOplogBackgroundThread which does not have
            # a unique definition.
            'incomplete',
        ],
        )

    wtEnv.Library(
        target='storage_wiredtiger',
        source=[
            'wiredtiger_init.cpp',
            'wiredtiger_options_init.cpp',
            'wiredtiger_parameters.cpp',
            'wiredtiger_record_store_mongold.cpp',
            'wiredtiger_server_status.cpp',
            ],
        LIBDEPS=['storage_wiredtiger_core',
                 '$BUILD_DIR/mongol/db/storage/kv/kv_engine',
                 '$BUILD_DIR/mongol/db/storage/storage_engine_lock_file',
                 '$BUILD_DIR/mongol/db/storage/storage_engine_metadata',
                 ],
        LIBDEPS_TAGS=[
            # Depends on symbols defined in serverOnlyfiles
            'incomplete',
        ],
        )

    wtEnv.Library(
        target='storage_wiredtiger_mock',
        source=[
            'wiredtiger_record_store_mock.cpp',
            ],
        LIBDEPS=['storage_wiredtiger_core',
             ]
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_record_store_test',
        source=['wiredtiger_record_store_test.cpp',
                ],
        LIBDEPS=[
            'storage_wiredtiger_mock',
            '$BUILD_DIR/mongol/db/storage/record_store_test_harness',
            ],
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_index_test',
        source=['wiredtiger_index_test.cpp',
                ],
        LIBDEPS=[
            'storage_wiredtiger_mock',
            '$BUILD_DIR/mongol/db/storage/sorted_data_interface_test_harness',
            ],
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_init_test',
        source=['wiredtiger_init_test.cpp',
                ],
        LIBDEPS=[
            '$BUILD_DIR/mongol/db/serveronly',
            '$BUILD_DIR/mongol/util/ntservice_mock',
            ],
        NO_CRUTCH=True,
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_kv_engine_test',
        source=['wiredtiger_kv_engine_test.cpp',
                ],
        LIBDEPS=[
            'storage_wiredtiger_mock',
            '$BUILD_DIR/mongol/db/storage/kv/kv_engine_test_harness',
            ],
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_util_test',
        source=['wiredtiger_util_test.cpp',
                ],
        LIBDEPS=[
            '$BUILD_DIR/mongol/db/service_context',
            'storage_wiredtiger_mock',
            ],
        )
