# -*- mode: python -*-

Import("env")

env.SConscript(
    dirs=[
        'legacy',
        'replset',
    ],
)

env.Library(
    target='catalog_types',
    source=[
        'type_actionlog.cpp',
        'type_changelog.cpp',
        'type_chunk.cpp',
        'type_collection.cpp',
        'type_config_version.cpp',
        'type_database.cpp',
        'type_lockpings.cpp',
        'type_locks.cpp',
        'type_mongols.cpp',
        'type_settings.cpp',
        'type_shard.cpp',
        'type_tags.cpp',
    ],
    LIBDEPS=[
        'mongol_version_range',
        '$BUILD_DIR/mongol/base',
        '$BUILD_DIR/mongol/bson/util/bson_extract',
        '$BUILD_DIR/mongol/db/common',
    ]
)

env.Library(
    target='mongol_version_range',
    source=[
        'mongol_version_range.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/base',
    ]
)

env.Library(
    target='catalog_manager',
    source=[
        'catalog_cache.cpp',
        'catalog_manager.cpp',
        'catalog_manager_common.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/base',
        '$BUILD_DIR/mongol/db/common',
        '$BUILD_DIR/mongol/s/write_ops/batch_write_types',
        '$BUILD_DIR/mongol/s/common',
        '$BUILD_DIR/mongol/s/catalog/catalog_types',
        '$BUILD_DIR/mongol/s/client/sharding_client',
        '$BUILD_DIR/mongol/s/shard_util',
        'dist_lock_manager',
    ],
    LIBDEPS_TAGS=[
        # Circular with coreshard for mongol::grid and mongol::DBConfig.
        'incomplete',
    ],
)

env.Library(
    target='forwarding_catalog_manager',
    source=[
        'forwarding_catalog_manager.cpp'
    ],
    LIBDEPS=[
        'catalog_manager',
        'legacy/catalog_manager_legacy',
        'replset/catalog_manager_replica_set',
        'replset/dist_lock_catalog_impl',
        'replset/replset_dist_lock_manager',
    ]
)

env.Library(
    target='catalog_manager_mock',
    source=[
        'catalog_manager_mock.cpp',
    ],
    LIBDEPS=[
        'catalog_manager',
        'dist_lock_manager_mock',
    ]
)

env.CppUnitTest(
    target='catalog_types_test',
    source=[
        'type_changelog_test.cpp',
        'type_chunk_test.cpp',
        'type_collection_test.cpp',
        'type_config_version_test.cpp',
        'type_database_test.cpp',
        'type_lockpings_test.cpp',
        'type_locks_test.cpp',
        'type_mongols_test.cpp',
        'type_settings_test.cpp',
        'type_shard_test.cpp',
        'type_tags_test.cpp',
    ],
    LIBDEPS=[
        'catalog_types'
    ]
)

env.Library(
    target='dist_lock_manager',
    source=[
        'dist_lock_manager.cpp',
        'dist_lock_ping_info.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/base',
    ],
)

env.Library(
    target='dist_lock_manager_mock',
    source=[
        'dist_lock_manager_mock.cpp',
    ],
    LIBDEPS=[
        'dist_lock_manager',
        '$BUILD_DIR/mongol/unittest/unittest',
    ],
)

env.Library(
    target='dist_lock_catalog_interface',
    source=[
        'dist_lock_catalog.cpp',
    ],
    LIBDEPS=[
    ],
)

env.Library(
    target='dist_lock_catalog_mock',
    source=[
        'dist_lock_catalog_mock.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongol/unittest/unittest',
        'catalog_types',
        'dist_lock_catalog_interface',
    ]
)
